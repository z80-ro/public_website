<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Icebreaker on Z80.ro</title>
    <link>/tags/icebreaker/</link>
    <description>Recent content in Icebreaker on Z80.ro</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 19 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/icebreaker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up the clock frequency</title>
      <link>/post/setting_up_the_frequency/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/setting_up_the_frequency/</guid>
      <description>Next step would be to test a sequential circuit and make sure simulation works. I will try to implement a 32bit counter in verilog and try to get some feedback about the values it holds using a few LEDs.
 Default net type First thing is to tell Verilog to be as strict as possible when trying to guess the types of my wires/regs. By default Verilog does not require me to declare signals before I use them.</description>
    </item>
    
    <item>
      <title>Testing verilog tools</title>
      <link>/post/testing_verilog_tools/</link>
      <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/testing_verilog_tools/</guid>
      <description>Following the articles from this point on might require some prior Verilog+FPGA knowledge.
My plan is to skip the boring part from every book/tutorial and jump into action head first. I preffer learning from increasingly difficult examples along the way than read about every boring detail, get tired and abandon hope altogether. For me this approach generates less questions and when they do arise they are usually important, leading to A-HA!</description>
    </item>
    
  </channel>
</rss>